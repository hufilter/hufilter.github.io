---
import { name, description, keywords, url } from '../constants';

interface Props {
    title?: string;
}

const { title: subTitle } = Astro.props;

const title = subTitle ? `${subTitle} - ${name}` : name;
const nameWithUrl = `${name} - ${url}`;

import socialMediaImage from '../assets/social-media.png';

/**
 * Open Graph data.
 *
 * @see {@link https://ogp.me/}
 */
const og = {
    title: nameWithUrl,
    locale: 'hu_HU',
    description,
    type: 'website',
    url,
    image: socialMediaImage.src,
};

const OG_PREFIX = 'og:';

/**
 * Twitter/X card data.
 *
 * @see {@link https://developer.x.com/en/docs/twitter-for-websites/cards/guides/getting-started}
 */
const x = {
    title: nameWithUrl,
    url,
    description,
    image: socialMediaImage.src,
    card: 'summary_large_image',
};

const X_PREFIX = 'twitter:';
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content={description} />
        <meta name="robots" content="all, index, follow" />
        <meta name="viewport" content="width=device-width" />
        <meta name="author" content={name} />
        <meta name="keywords" content={keywords.join(',')} />
        <meta name="publisher" content={nameWithUrl} />
        <meta name="copyright" content={nameWithUrl} />
        <meta name="generator" content={Astro.generator} />

        <title>{title}</title>

        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

        {Object.entries(og).map(([key, value]) => <meta property={`${OG_PREFIX}:${key}`} content={value} />)}
        {Object.entries(x).map(([key, value]) => <meta name={`${X_PREFIX}:${key}`} content={value} />)}
    </head>
    <body>
		<!-- TODO: header, footer -->
        <main>
            <slot />
        </main>
    </body>
</html>
